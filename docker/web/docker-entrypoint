#!/command/with-contenv bash

# Convert one parameter to uppercase
to_uppercase() {
    echo "${1}" | tr '[:lower:]' '[:upper:]'
}

# Check if the parameter is string True/False and return it as success/failure
is_enabled() {
    _UPPER_VALUE=$(to_uppercase "$1")
    if [ "${_UPPER_VALUE}" = "TRUE" ]; then
        return 0
    elif [ "${_UPPER_VALUE}" = "FALSE" ]; then
        return 1
    else
        echo "WARNING: init.sh interpreting \"$1\" as False" >/dev/stderr
        return 1
    fi
}


PORT=${PORT:-"8010"}

RUN_LOAD_DUMMY_DATA=${RUN_LOAD_DUMMY_DATA:-"no"}

RUN_MIGRATIONS=${RUN_MIGRATIONS:-"yes"}
RUN_INITIALIZATION=${RUN_INITIALIZATION:-"yes"}
RUN_COLLECT_STATIC=${RUN_COLLECT_STATIC:-"no"}
RUN_DEV_SERVER=${RUN_DEV_SERVER:-"yes"}

echo "Run basic health checks"
./manage.py check

if is_enabled "${RUN_MIGRATIONS:-False}"; then
  echo "Run database migrations"
  ./manage.py migrate
fi

if is_enabled "${RUN_INITIALIZATION:-False}"; then
  echo "Add functional data to the system"
  ./manage.py init
fi

if is_enabled "${RUN_LOAD_DUMMY_DATA:-False}"; then
  echo "Load dummy data in the database"
  ./manage.py seed
fi

if is_enabled "${RUN_COLLECT_STATIC:-False}"; then
  echo "Collect static files"
  mkdir -p staticfiles
  ./manage.py collectstatic --noinput
fi

if is_enabled "${RUN_DEV_SERVER:-False}"; then
  echo "Start web server on $PORT"
  ./manage.py runserver_plus "0.0.0.0:$PORT"
else
   gunicorn civil_society_vote.wsgi --bind "0.0.0.0:$PORT" --log-level info -k gevent -w 10 -t 90
fi
